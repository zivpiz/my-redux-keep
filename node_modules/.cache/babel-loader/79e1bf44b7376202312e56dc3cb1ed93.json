{"ast":null,"code":"import _classCallCheck from \"/Users/zivp/WebstormProjects/my-redux-keep/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/zivp/WebstormProjects/my-redux-keep/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/zivp/WebstormProjects/my-redux-keep/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/zivp/WebstormProjects/my-redux-keep/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/zivp/WebstormProjects/my-redux-keep/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/zivp/WebstormProjects/my-redux-keep/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/zivp/WebstormProjects/my-redux-keep/src/Components/AllNotes.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\nimport NoteSubmit from './NoteSubmit';\nimport './../style.css';\n\nvar renderList = function renderList(list) {\n  return list.map(function (elem) {\n    return SortableElement(React.createElement(\"li\", {\n      key: elem.props.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, elem));\n  });\n};\n\nvar AllNotes =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AllNotes, _Component);\n\n  function AllNotes(props) {\n    var _this;\n\n    _classCallCheck(this, AllNotes);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AllNotes).call(this, props));\n\n    _this.onUncheckedEnd = function () {\n      return console.log(\"Unchecked works!\");\n    };\n\n    _this.onCheckedEnd = function () {\n      return console.log(\"Checked works!\");\n    };\n\n    _this.onUncheckedEnd = _this.onUncheckedEnd.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onCheckedEnd = _this.onCheckedEnd.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(AllNotes, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"AllNotes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"ol\", {\n        className: \"uncheckedNotes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, renderList(this.props.uncheckedNotes)), React.createElement(NoteSubmit, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }), React.createElement(\"ol\", {\n        className: \"checkedNotes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, renderList(this.props.checkedNotes)));\n    }\n  }]);\n\n  return AllNotes;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    uncheckedNotes: state.uncheckedNotes,\n    checkedNotes: state.checkedNotes\n  };\n};\n\nexport default connect(mapStateToProps)(AllNotes);","map":{"version":3,"sources":["/Users/zivp/WebstormProjects/my-redux-keep/src/Components/AllNotes.js"],"names":["React","Component","connect","SortableContainer","SortableElement","NoteSubmit","renderList","list","map","elem","props","id","AllNotes","onUncheckedEnd","console","log","onCheckedEnd","bind","uncheckedNotes","checkedNotes","mapStateToProps","state"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,iBAAR,EAA2BC,eAA3B,QAAiD,oBAAjD;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAO,gBAAP;;AAGA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD;AAAA,SAAWA,IAAI,CAACC,GAAL,CAAS,UAAAC,IAAI;AAAA,WAAIL,eAAe,CAAC;AAAI,MAAA,GAAG,EAAEK,IAAI,CAACC,KAAL,CAAWC,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyBF,IAAzB,CAAD,CAAnB;AAAA,GAAb,CAAX;AAAA,CAAnB;;IAEMG,Q;;;;;AACF,oBAAYF,KAAZ,EAAkB;AAAA;;AAAA;;AACd,kFAAMA,KAAN;;AADc,UAOlBG,cAPkB,GAOD;AAAA,aAAMC,OAAO,CAACC,GAAR,CAAY,kBAAZ,CAAN;AAAA,KAPC;;AAAA,UASlBC,YATkB,GASH;AAAA,aAAMF,OAAO,CAACC,GAAR,CAAY,gBAAZ,CAAN;AAAA,KATG;;AAGd,UAAKF,cAAL,GAAsB,MAAKA,cAAL,CAAoBI,IAApB,uDAAtB;AACA,UAAKD,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,uDAApB;AAJc;AAKjB;;;;6BAMQ;AACL,aACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKX,UAAU,CAAC,KAAKI,KAAL,CAAWQ,cAAZ,CADf,CADJ,EAII,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,EAKI;AAAI,QAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKZ,UAAU,CAAC,KAAKI,KAAL,CAAWS,YAAZ,CADf,CALJ,CADJ;AAWH;;;;EAxBkBlB,S;;AA2BvB,IAAMmB,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SACzB;AACIH,IAAAA,cAAc,EAAEG,KAAK,CAACH,cAD1B;AAEIC,IAAAA,YAAY,EAAEE,KAAK,CAACF;AAFxB,GADyB;AAAA,CAA7B;;AAOA,eAAejB,OAAO,CAACkB,eAAD,CAAP,CAAyBR,QAAzB,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {SortableContainer, SortableElement} from 'react-sortable-hoc';\nimport NoteSubmit from './NoteSubmit';\nimport './../style.css';\n\n\nconst renderList = (list) => (list.map(elem => SortableElement(<li key={elem.props.id}>{elem}</li>)));\n\nclass AllNotes extends Component {\n    constructor(props){\n        super(props);\n\n        this.onUncheckedEnd = this.onUncheckedEnd.bind(this);\n        this.onCheckedEnd = this.onCheckedEnd.bind(this);\n    }\n\n    onUncheckedEnd = () => console.log(\"Unchecked works!\");\n\n    onCheckedEnd = () => console.log(\"Checked works!\");\n\n    render() {\n        return (\n            <div className=\"AllNotes\">\n                <ol className=\"uncheckedNotes\">\n                    {renderList(this.props.uncheckedNotes)}\n                </ol>\n                <NoteSubmit />\n                <ol className=\"checkedNotes\">\n                    {renderList(this.props.checkedNotes)}\n                </ol>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => (\n    {\n        uncheckedNotes: state.uncheckedNotes,\n        checkedNotes: state.checkedNotes\n    }\n);\n\nexport default connect(mapStateToProps)(AllNotes);"]},"metadata":{},"sourceType":"module"}