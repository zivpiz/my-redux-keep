{"ast":null,"code":"import _toConsumableArray from \"/Users/zivp/WebstormProjects/my-redux-keep/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/Users/zivp/WebstormProjects/my-redux-keep/src/reducers/index.js\";\nimport Note from \"../Components/Note\";\nimport React from \"react\";\nimport arrayMove from 'array-move';\nimport { nextIdReducer } from './nextIdReducer';\nimport { combineReducers } from 'redux';\nexport var createNoteFromObj = function createNoteFromObj(noteObj) {\n  return React.createElement(Note, {\n    text: noteObj.text,\n    checked: noteObj.checked,\n    id: noteObj.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  });\n};\nexport var changeCheckAndCreateNote = function changeCheckAndCreateNote(noteProps) {\n  return React.createElement(Note, {\n    text: noteProps.text,\n    checked: !noteProps.checked,\n    id: noteProps.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  });\n};\n\nvar uncheckedNotesReducer = function uncheckedNotesReducer() {\n  var uncheckedList = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'CREATE_UNCHECKED_NOTE':\n      return [].concat(_toConsumableArray(uncheckedList), [createNoteFromObj(action.payload)]);\n\n    case 'CHANGE_CHECKED_NOTE':\n      return [].concat(_toConsumableArray(uncheckedList), [changeCheckAndCreateNote(action.payload)]);\n\n    case 'CHANGE_UNCHECKED_NOTE':\n      return uncheckedList.filter(function (elem) {\n        return elem.props.id !== action.payload.id;\n      });\n\n    case 'DRAG_UNCHECKED_NOTE':\n      return arrayMove(uncheckedList, action.payload.oldIndex, action.payload.newIndex);\n\n    default:\n      return uncheckedList;\n  }\n};\n\nexport default combineReducers({\n  uncheckedNotes: uncheckedNotesReducer,\n  checkedNotes: checkedNotesReducer,\n  nextId: nextIdReducer\n});","map":{"version":3,"sources":["/Users/zivp/WebstormProjects/my-redux-keep/src/reducers/index.js"],"names":["Note","React","arrayMove","nextIdReducer","combineReducers","createNoteFromObj","noteObj","text","checked","id","changeCheckAndCreateNote","noteProps","uncheckedNotesReducer","uncheckedList","action","type","payload","filter","elem","props","oldIndex","newIndex","uncheckedNotes","checkedNotes","checkedNotesReducer","nextId"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,oBAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,aAAR,QAA4B,iBAA5B;AAEA,SAASC,eAAT,QAA+B,OAA/B;AAEA,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,OAAD;AAAA,SAC7B,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEA,OAAO,CAACC,IAApB;AAA0B,IAAA,OAAO,EAAED,OAAO,CAACE,OAA3C;AAAoD,IAAA,EAAE,EAAEF,OAAO,CAACG,EAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD6B;AAAA,CAA1B;AAGP,OAAO,IAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,CAACC,SAAD;AAAA,SACpC,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEA,SAAS,CAACJ,IAAtB;AAA4B,IAAA,OAAO,EAAE,CAACI,SAAS,CAACH,OAAhD;AAAyD,IAAA,EAAE,EAAEG,SAAS,CAACF,EAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADoC;AAAA,CAAjC;;AAIP,IAAMG,qBAAqB,GAAG,SAAxBA,qBAAwB,GAAgC;AAAA,MAA/BC,aAA+B,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AAC1D,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,uBAAL;AACI,0CAAWF,aAAX,IAA0BR,iBAAiB,CAACS,MAAM,CAACE,OAAR,CAA3C;;AACJ,SAAK,qBAAL;AACI,0CAAWH,aAAX,IAA0BH,wBAAwB,CAACI,MAAM,CAACE,OAAR,CAAlD;;AACJ,SAAK,uBAAL;AACI,aAAOH,aAAa,CAACI,MAAd,CAAqB,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACC,KAAL,CAAWV,EAAX,KAAkBK,MAAM,CAACE,OAAP,CAAeP,EAArC;AAAA,OAAzB,CAAP;;AACJ,SAAK,qBAAL;AACI,aAAOP,SAAS,CAACW,aAAD,EAAgBC,MAAM,CAACE,OAAP,CAAeI,QAA/B,EAAyCN,MAAM,CAACE,OAAP,CAAeK,QAAxD,CAAhB;;AACJ;AAAS,aAAOR,aAAP;AATb;AAWH,CAZD;;AAmBA,eAAeT,eAAe,CAAC;AAC3BkB,EAAAA,cAAc,EAAEV,qBADW;AAE3BW,EAAAA,YAAY,EAAEC,mBAFa;AAG3BC,EAAAA,MAAM,EAAEtB;AAHmB,CAAD,CAA9B","sourcesContent":["import Note from \"../Components/Note\";\nimport React from \"react\";\nimport arrayMove from 'array-move';\nimport {nextIdReducer} from './nextIdReducer';\n\nimport { combineReducers} from 'redux';\n\nexport const createNoteFromObj = (noteObj) =>\n    <Note text={noteObj.text} checked={noteObj.checked} id={noteObj.id}/>;\n\nexport const changeCheckAndCreateNote = (noteProps) =>\n    <Note text={noteProps.text} checked={!noteProps.checked} id={noteProps.id}/>;\n\n\nconst uncheckedNotesReducer = (uncheckedList = [], action) => {\n    switch(action.type){\n        case 'CREATE_UNCHECKED_NOTE':\n            return [...uncheckedList, createNoteFromObj(action.payload)];\n        case 'CHANGE_CHECKED_NOTE':\n            return [...uncheckedList, changeCheckAndCreateNote(action.payload)];\n        case 'CHANGE_UNCHECKED_NOTE':\n            return uncheckedList.filter(elem => elem.props.id !== action.payload.id);\n        case 'DRAG_UNCHECKED_NOTE':\n            return arrayMove(uncheckedList, action.payload.oldIndex, action.payload.newIndex);\n        default: return uncheckedList;\n    }\n};\n\n\n\n\n\n\nexport default combineReducers({\n    uncheckedNotes: uncheckedNotesReducer,\n    checkedNotes: checkedNotesReducer,\n    nextId: nextIdReducer\n});\n"]},"metadata":{},"sourceType":"module"}