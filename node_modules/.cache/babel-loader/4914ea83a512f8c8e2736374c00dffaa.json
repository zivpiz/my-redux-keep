{"ast":null,"code":"import _toConsumableArray from \"/Users/zivp/WebstormProjects/my-redux-keep/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/Users/zivp/WebstormProjects/my-redux-keep/src/reducers/index.js\";\nimport Note from \"../Components/Note\";\nimport React from \"react\";\nimport { combineReducers } from 'redux';\nimport arrayMove from 'array-move';\n\nvar createNoteFromObj = function createNoteFromObj(noteObj) {\n  return React.createElement(Note, {\n    text: noteObj.text,\n    checked: noteObj.checked,\n    id: noteObj.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  });\n};\n\nvar changeCheckAndCreateNote = function changeCheckAndCreateNote(noteProps) {\n  return React.createElement(Note, {\n    text: noteProps.text,\n    checked: !noteProps.checked,\n    id: noteProps.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  });\n};\n\nvar uncheckedNotesReducer = function uncheckedNotesReducer() {\n  var uncheckedList = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'CREATE_UNCHECKED_NOTE':\n      return [].concat(_toConsumableArray(uncheckedList), [createNoteFromObj(action.payload)]);\n\n    case 'CHANGE_CHECKED_NOTE':\n      return [].concat(_toConsumableArray(uncheckedList), [changeCheckAndCreateNote(action.payload)]);\n\n    case 'CHANGE_UNCHECKED_NOTE':\n      return uncheckedList.filter(function (elem) {\n        return elem.props.id !== action.payload.id;\n      });\n\n    case 'DRAG_UNCHECKED_NOTE':\n      return arrayMove(uncheckedList, action.payload.oldIndex, action.payload.newIndex);\n\n    default:\n      return uncheckedList;\n  }\n};\n\nvar checkedNotesReducer = function checkedNotesReducer() {\n  var checkedList = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'CREATE_CHECKED_NOTE':\n      return [].concat(_toConsumableArray(checkedList), [createNoteFromObj(action.payload)]);\n\n    case 'CHANGE_CHECKED_NOTE':\n      return checkedList.filter(function (elem) {\n        return elem.props.id !== action.payload.id;\n      });\n\n    case 'CHANGE_UNCHECKED_NOTE':\n      return [].concat(_toConsumableArray(checkedList), [changeCheckAndCreateNote(action.payload)]);\n\n    case 'DRAG_CHECKED_NOTE':\n      return arrayMove(checkedList, action.payload.oldIndex, action.payload.newIndex);\n\n    default:\n      return checkedList;\n  }\n};\n\nvar nextIdReducer = function nextIdReducer() {\n  var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'CREATE_CHECKED_NOTE':\n    case 'CREATE_UNCHECKED_NOTE':\n      return ++id;\n\n    default:\n      return id;\n  }\n};\n\nexport default combineReducers({\n  uncheckedNotes: uncheckedNotesReducer,\n  checkedNotes: checkedNotesReducer,\n  nextId: nextIdReducer\n});","map":{"version":3,"sources":["/Users/zivp/WebstormProjects/my-redux-keep/src/reducers/index.js"],"names":["Note","React","combineReducers","arrayMove","createNoteFromObj","noteObj","text","checked","id","changeCheckAndCreateNote","noteProps","uncheckedNotesReducer","uncheckedList","action","type","payload","filter","elem","props","oldIndex","newIndex","checkedNotesReducer","checkedList","nextIdReducer","uncheckedNotes","checkedNotes","nextId"],"mappings":"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","sourcesContent":["import Note from \"../Components/Note\";\nimport React from \"react\";\nimport { combineReducers} from 'redux';\nimport arrayMove from 'array-move';\n\nconst createNoteFromObj = (noteObj) =>\n    <Note text={noteObj.text} checked={noteObj.checked} id={noteObj.id}/>;\n\nconst changeCheckAndCreateNote = (noteProps) =>\n    <Note text={noteProps.text} checked={!noteProps.checked} id={noteProps.id}/>;\n\n\nconst uncheckedNotesReducer = (uncheckedList = [], action) => {\n    switch(action.type){\n        case 'CREATE_UNCHECKED_NOTE':\n            return [...uncheckedList, createNoteFromObj(action.payload)];\n        case 'CHANGE_CHECKED_NOTE':\n            return [...uncheckedList, changeCheckAndCreateNote(action.payload)];\n        case 'CHANGE_UNCHECKED_NOTE':\n            return uncheckedList.filter(elem => elem.props.id !== action.payload.id);\n        case 'DRAG_UNCHECKED_NOTE':\n            return arrayMove(uncheckedList, action.payload.oldIndex, action.payload.newIndex);\n        default: return uncheckedList;\n    }\n};\n\nconst checkedNotesReducer = (checkedList = [], action) => {\n    switch(action.type){\n        case 'CREATE_CHECKED_NOTE':\n            return [...checkedList, createNoteFromObj(action.payload)];\n        case 'CHANGE_CHECKED_NOTE':\n            return checkedList.filter(elem => elem.props.id !== action.payload.id);\n        case 'CHANGE_UNCHECKED_NOTE':\n            return [...checkedList, changeCheckAndCreateNote(action.payload)];\n        case 'DRAG_CHECKED_NOTE':\n            return arrayMove(checkedList, action.payload.oldIndex, action.payload.newIndex);\n        default: return checkedList;\n    }\n};\n\nconst nextIdReducer = (id = 0, action) => {\n    switch (action.type) {\n        case 'CREATE_CHECKED_NOTE':\n        case 'CREATE_UNCHECKED_NOTE':\n            return ++id;\n        default: return id;\n    }\n};\n\n\nexport default combineReducers({\n    uncheckedNotes: uncheckedNotesReducer,\n    checkedNotes: checkedNotesReducer,\n    nextId: nextIdReducer\n});\n"]},"metadata":{},"sourceType":"module"}