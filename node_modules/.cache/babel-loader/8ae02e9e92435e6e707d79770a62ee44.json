{"ast":null,"code":"import _classCallCheck from \"/Users/zivp/WebstormProjects/my-keep/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/zivp/WebstormProjects/my-keep/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/zivp/WebstormProjects/my-keep/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/zivp/WebstormProjects/my-keep/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/zivp/WebstormProjects/my-keep/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/zivp/WebstormProjects/my-keep/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/zivp/WebstormProjects/my-keep/src/Components/NoteSubmit.js\";\nimport React, { Component } from 'react';\nimport Note from './Note';\n\nvar NoteSubmit =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NoteSubmit, _Component);\n\n  function NoteSubmit(props) {\n    var _this;\n\n    _classCallCheck(this, NoteSubmit);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NoteSubmit).call(this, props));\n\n    _this.ConditionalBoxRender = function () {\n      return _this.state.text === '' ? '' : React.createElement(\"input\", {\n        type: \"checkbox\",\n        onChange: _this.handleCheck,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      });\n    };\n\n    _this.handleTextChange = function (event) {\n      _this.setState({\n        text: event.target.value\n      });\n\n      _this.submitNote();\n    };\n\n    _this.handleCheck = function () {\n      return _this.setState({\n        checked: !_this.state.checked\n      });\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n\n      _this.submitNote();\n    };\n\n    _this.submitNote = function () {\n      if (_this.state.text !== '') {\n        _this.props.updateNoteList(React.createElement(Note, {\n          text: _this.state.text,\n          checked: _this.state.checked,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }));\n\n        _this.setState({\n          text: '',\n          isChecked: false\n        });\n      }\n    };\n\n    _this.state = {\n      text: '',\n      checked: false\n    };\n    _this.ConditionalBoxRender = _this.ConditionalBoxRender.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleTextChange = _this.handleTextChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleCheck = _this.handleCheck.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.submitNote = _this.submitNote.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(NoteSubmit, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, this.ConditionalBoxRender(), React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Take a note...\",\n        name: \"inputName\",\n        value: this.state.text,\n        onChange: this.handleTextChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return NoteSubmit;\n}(Component);\n\nexport default NoteSubmit;","map":{"version":3,"sources":["/Users/zivp/WebstormProjects/my-keep/src/Components/NoteSubmit.js"],"names":["React","Component","Note","NoteSubmit","props","ConditionalBoxRender","state","text","handleCheck","handleTextChange","event","setState","target","value","submitNote","checked","handleSubmit","preventDefault","updateNoteList","isChecked","bind"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,IAAP,MAAiB,QAAjB;;IAEMC,U;;;;;AACF,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,oFAAMA,KAAN;;AADe,UAYnBC,oBAZmB,GAYI;AAAA,aAAM,MAAKC,KAAL,CAAWC,IAAX,KAAoB,EAApB,GAAyB,EAAzB,GAA8B;AAAO,QAAA,IAAI,EAAE,UAAb;AAAwB,QAAA,QAAQ,EAAG,MAAKC,WAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAApC;AAAA,KAZJ;;AAAA,UAcnBC,gBAdmB,GAcA,UAACC,KAAD,EAAW;AAC1B,YAAKC,QAAL,CAAc;AAACJ,QAAAA,IAAI,EAAEG,KAAK,CAACE,MAAN,CAAaC;AAApB,OAAd;;AACA,YAAKC,UAAL;AACH,KAjBkB;;AAAA,UAmBnBN,WAnBmB,GAmBL;AAAA,aAAM,MAAKG,QAAL,CAAc;AAACI,QAAAA,OAAO,EAAE,CAAC,MAAKT,KAAL,CAAWS;AAAtB,OAAd,CAAN;AAAA,KAnBK;;AAAA,UAqBnBC,YArBmB,GAqBJ,UAACN,KAAD,EAAW;AACtBA,MAAAA,KAAK,CAACO,cAAN;;AACA,YAAKH,UAAL;AACH,KAxBkB;;AAAA,UA0BnBA,UA1BmB,GA0BN,YAAK;AACd,UAAG,MAAKR,KAAL,CAAWC,IAAX,KAAoB,EAAvB,EAA0B;AACtB,cAAKH,KAAL,CAAWc,cAAX,CAA0B,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAE,MAAKZ,KAAL,CAAWC,IAAvB;AAA6B,UAAA,OAAO,EAAE,MAAKD,KAAL,CAAWS,OAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA1B;;AACA,cAAKJ,QAAL,CAAc;AAACJ,UAAAA,IAAI,EAAE,EAAP;AAAWY,UAAAA,SAAS,EAAE;AAAtB,SAAd;AACH;AACJ,KA/BkB;;AAGf,UAAKb,KAAL,GAAa;AAACC,MAAAA,IAAI,EAAE,EAAP;AAAWQ,MAAAA,OAAO,EAAE;AAApB,KAAb;AAEA,UAAKV,oBAAL,GAA4B,MAAKA,oBAAL,CAA0Be,IAA1B,uDAA5B;AACA,UAAKX,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBW,IAAtB,uDAAxB;AACA,UAAKZ,WAAL,GAAmB,MAAKA,WAAL,CAAiBY,IAAjB,uDAAnB;AACA,UAAKJ,YAAL,GAAoB,MAAKA,YAAL,CAAkBI,IAAlB,uDAApB;AACA,UAAKN,UAAL,GAAkB,MAAKA,UAAL,CAAgBM,IAAhB,uDAAlB;AATe;AAUlB;;;;6BAuBQ;AACL,aACI;AAAM,QAAA,QAAQ,EAAE,KAAKJ,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKX,oBAAL,EADL,EAEA;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,gBAA/B;AAAgD,QAAA,IAAI,EAAC,WAArD;AACO,QAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC,IADzB;AAC+B,QAAA,QAAQ,EAAE,KAAKE,gBAD9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA,CADJ;AAOH;;;;EA1CoBR,S;;AA8CzB,eAAeE,UAAf","sourcesContent":["import React, {Component} from 'react';\nimport Note from './Note';\n\nclass NoteSubmit extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {text: '', checked: false};\n\n        this.ConditionalBoxRender = this.ConditionalBoxRender.bind(this);\n        this.handleTextChange = this.handleTextChange.bind(this);\n        this.handleCheck = this.handleCheck.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.submitNote = this.submitNote.bind(this);\n    }\n\n    ConditionalBoxRender = () => this.state.text === '' ? '' : <input type =\"checkbox\" onChange ={this.handleCheck}/>;\n\n    handleTextChange = (event) => {\n        this.setState({text: event.target.value});\n        this.submitNote();\n    };\n\n    handleCheck = () => this.setState({checked: !this.state.checked});\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        this.submitNote();\n    };\n\n    submitNote = () =>{\n        if(this.state.text !== ''){\n            this.props.updateNoteList(<Note text={this.state.text} checked={this.state.checked} />);\n            this.setState({text: '', isChecked: false});\n        }\n    };\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit}>\n                {this.ConditionalBoxRender()}\n            <input type=\"text\" placeholder=\"Take a note...\" name=\"inputName\"\n                   value={this.state.text} onChange={this.handleTextChange}/>\n            </form>\n        )\n    }\n\n}\n\nexport default NoteSubmit;"]},"metadata":{},"sourceType":"module"}