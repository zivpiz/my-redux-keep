{"ast":null,"code":"import _toConsumableArray from \"/Users/zivp/WebstormProjects/my-redux-keep/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/Users/zivp/WebstormProjects/my-redux-keep/src/reducers/index.js\";\nimport Note from \"../Components/Note\";\nimport React from \"react\";\nimport { combineReducers } from 'redux';\n\nvar createNoteFromObj = function createNoteFromObj(noteObj) {\n  return React.createElement(Note, {\n    text: noteObj.text,\n    checked: noteObj.checked,\n    id: noteObj.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  });\n};\n\nvar changeCheckAndCreateNote = function changeCheckAndCreateNote(noteComp) {\n  return React.createElement(Note, {\n    text: noteComp.props.text,\n    checked: !noteComp.props.checked,\n    id: noteComp.props.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  });\n};\n\nvar uncheckedNotesReducer = function uncheckedNotesReducer() {\n  var uncheckedList = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'CREATE_UNCHECKED_NOTE':\n      return [].concat(_toConsumableArray(uncheckedList), [createNoteFromObj(action.payload)]);\n\n    case 'CHANGE_CHECKED_NOTE':\n      return [].concat(_toConsumableArray(uncheckedList), [changeCheckAndCreateNote(action.payload)]);\n\n    case 'CHANGE_UNCHECKED_NOTE':\n      return uncheckedList.filter(function (elem) {\n        return elem.props.id !== action.payload.props.id;\n      });\n\n    default:\n      return uncheckedList;\n  }\n};\n\nvar checkedNotesReducer = function checkedNotesReducer() {\n  var checkedList = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'CREATE_CHECKED_NOTE':\n      return [].concat(_toConsumableArray(checkedList), [createNoteFromObj(action.payload)]);\n\n    case 'CHANGE_CHECKED_NOTE':\n      return checkedList.filter(function (elem) {\n        return elem.props.id !== action.payload.props.id;\n      });\n\n    case 'CHANGE_UNCHECKED_NOTE':\n      return [].concat(_toConsumableArray(checkedList), [changeCheckAndCreateNote(action.payload)]);\n\n    default:\n      return checkedList;\n  }\n};\n\nvar nextIdReducer = function nextIdReducer() {\n  var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'CREATE_CHECKED_NOTE':\n      return ++id;\n\n    default:\n      return id;\n  }\n};\n\nexport default combineReducers({\n  uncheckedNotes: uncheckedNotesReducer,\n  checkedNotes: checkedNotesReducer,\n  nextId: nextIdReducer\n});","map":{"version":3,"sources":["/Users/zivp/WebstormProjects/my-redux-keep/src/reducers/index.js"],"names":["Note","React","combineReducers","createNoteFromObj","noteObj","text","checked","id","changeCheckAndCreateNote","noteComp","props","uncheckedNotesReducer","uncheckedList","action","type","payload","filter","elem","checkedNotesReducer","checkedList","nextIdReducer","uncheckedNotes","checkedNotes","nextId"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,oBAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAA+B,OAA/B;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,OAAD;AAAA,SACtB,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEA,OAAO,CAACC,IAApB;AAA0B,IAAA,OAAO,EAAED,OAAO,CAACE,OAA3C;AAAoD,IAAA,EAAE,EAAEF,OAAO,CAACG,EAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADsB;AAAA,CAA1B;;AAGA,IAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,CAACC,QAAD;AAAA,SAC7B,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEA,QAAQ,CAACC,KAAT,CAAeL,IAA3B;AAAiC,IAAA,OAAO,EAAE,CAACI,QAAQ,CAACC,KAAT,CAAeJ,OAA1D;AAAmE,IAAA,EAAE,EAAEG,QAAQ,CAACC,KAAT,CAAeH,EAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD6B;AAAA,CAAjC;;AAGA,IAAMI,qBAAqB,GAAG,SAAxBA,qBAAwB,GAAgC;AAAA,MAA/BC,aAA+B,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AAC1D,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,uBAAL;AACI,0CAAWF,aAAX,IAA0BT,iBAAiB,CAACU,MAAM,CAACE,OAAR,CAA3C;;AACJ,SAAK,qBAAL;AACI,0CAAWH,aAAX,IAA0BJ,wBAAwB,CAACK,MAAM,CAACE,OAAR,CAAlD;;AACJ,SAAK,uBAAL;AACI,aAAOH,aAAa,CAACI,MAAd,CAAqB,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACP,KAAL,CAAWH,EAAX,KAAkBM,MAAM,CAACE,OAAP,CAAeL,KAAf,CAAqBH,EAA3C;AAAA,OAAzB,CAAP;;AACJ;AAAS,aAAOK,aAAP;AAPb;AASH,CAVD;;AAYA,IAAMM,mBAAmB,GAAG,SAAtBA,mBAAsB,GAA8B;AAAA,MAA7BC,WAA6B,uEAAf,EAAe;AAAA,MAAXN,MAAW;;AACtD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,qBAAL;AACI,0CAAWK,WAAX,IAAwBhB,iBAAiB,CAACU,MAAM,CAACE,OAAR,CAAzC;;AACJ,SAAK,qBAAL;AACI,aAAOI,WAAW,CAACH,MAAZ,CAAmB,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACP,KAAL,CAAWH,EAAX,KAAkBM,MAAM,CAACE,OAAP,CAAeL,KAAf,CAAqBH,EAA3C;AAAA,OAAvB,CAAP;;AACJ,SAAK,uBAAL;AACI,0CAAWY,WAAX,IAAwBX,wBAAwB,CAACK,MAAM,CAACE,OAAR,CAAhD;;AACJ;AAAS,aAAOI,WAAP;AAPb;AASH,CAVD;;AAYA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAoB;AAAA,MAAnBb,EAAmB,uEAAd,CAAc;AAAA,MAAXM,MAAW;;AACtC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,qBAAL;AACI,aAAO,EAAEP,EAAT;;AACJ;AAAS,aAAOA,EAAP;AAHb;AAKH,CAND;;AASA,eAAeL,eAAe,CAAC;AAC3BmB,EAAAA,cAAc,EAAEV,qBADW;AAE3BW,EAAAA,YAAY,EAAEJ,mBAFa;AAG3BK,EAAAA,MAAM,EAAEH;AAHmB,CAAD,CAA9B","sourcesContent":["import Note from \"../Components/Note\";\nimport React from \"react\";\nimport { combineReducers} from 'redux';\n\nconst createNoteFromObj = (noteObj) =>\n    <Note text={noteObj.text} checked={noteObj.checked} id={noteObj.id}/>;\n\nconst changeCheckAndCreateNote = (noteComp) =>\n    <Note text={noteComp.props.text} checked={!noteComp.props.checked} id={noteComp.props.id}/>;\n\nconst uncheckedNotesReducer = (uncheckedList = [], action) => {\n    switch(action.type){\n        case 'CREATE_UNCHECKED_NOTE':\n            return [...uncheckedList, createNoteFromObj(action.payload)];\n        case 'CHANGE_CHECKED_NOTE':\n            return [...uncheckedList, changeCheckAndCreateNote(action.payload)];\n        case 'CHANGE_UNCHECKED_NOTE':\n            return uncheckedList.filter(elem => elem.props.id !== action.payload.props.id);\n        default: return uncheckedList;\n    }\n};\n\nconst checkedNotesReducer = (checkedList = [], action) => {\n    switch(action.type){\n        case 'CREATE_CHECKED_NOTE':\n            return [...checkedList, createNoteFromObj(action.payload)];\n        case 'CHANGE_CHECKED_NOTE':\n            return checkedList.filter(elem => elem.props.id !== action.payload.props.id);\n        case 'CHANGE_UNCHECKED_NOTE':\n            return [...checkedList, changeCheckAndCreateNote(action.payload)];\n        default: return checkedList;\n    }\n};\n\nconst nextIdReducer = (id = 0, action) => {\n    switch (action.type) {\n        case 'CREATE_CHECKED_NOTE':\n            return ++id;\n        default: return id;\n    }\n};\n\n\nexport default combineReducers({\n    uncheckedNotes: uncheckedNotesReducer,\n    checkedNotes: checkedNotesReducer,\n    nextId: nextIdReducer\n});\n"]},"metadata":{},"sourceType":"module"}