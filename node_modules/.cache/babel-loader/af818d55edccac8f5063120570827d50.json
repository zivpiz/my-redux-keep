{"ast":null,"code":"import _toConsumableArray from \"/Users/zivp/WebstormProjects/my-keep/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/zivp/WebstormProjects/my-keep/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/zivp/WebstormProjects/my-keep/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/zivp/WebstormProjects/my-keep/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/zivp/WebstormProjects/my-keep/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/zivp/WebstormProjects/my-keep/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/zivp/WebstormProjects/my-keep/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/zivp/WebstormProjects/my-keep/src/Components/AllNotes.js\";\nimport React, { Component } from 'react';\nimport NoteSubmit from './NoteSubmit';\nimport Note from './Note';\n\nvar AllNotes =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AllNotes, _Component);\n\n  function AllNotes(props) {\n    var _this;\n\n    _classCallCheck(this, AllNotes);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AllNotes).call(this, props));\n\n    _this.renderList = function (list) {\n      return list.map(function (elem) {\n        return React.createElement(\"li\", {\n          key: elem.props.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }, elem);\n      });\n    };\n\n    _this.receiveNewNote = function (newNote) {\n      var note = React.createElement(Note, {\n        text: newNote.text,\n        checked: newNote.checked,\n        handleCheck: _this.updateNoteCheck,\n        id: _this.state.nextId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      });\n\n      _this.setState({\n        nextId: ++_this.state.nextId\n      });\n\n      if (newNote.checked) _this.setState({\n        checkedNotes: [].concat(_toConsumableArray(_this.state.checkedNotes), [note])\n      });else _this.setState({\n        uncheckedNotes: [].concat(_toConsumableArray(_this.state.uncheckedNotes), [note])\n      });\n    };\n\n    _this.updateNoteCheck = function (note) {\n      //const boolToNoteList = {true: this.state.checkedNotes, false:this.state.uncheckedNotes};\n      var noteOldStatus = note.props.checked;\n      note.props.checked = !noteOldStatus;\n      note;\n      console.log(_this.state.checkedNotes.includes(note));\n      console.log(_this.state.uncheckedNotes.includes(note));\n    };\n\n    _this.state = {\n      uncheckedNotes: [],\n      checkedNotes: [],\n      nextId: 0\n    };\n    _this.renderList = _this.renderList.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.receiveNewNote = _this.receiveNewNote.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateNoteCheck = _this.updateNoteCheck.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(AllNotes, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, this.renderList(this.state.uncheckedNotes)), React.createElement(NoteSubmit, {\n        updateNoteList: this.receiveNewNote,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, this.renderList(this.state.checkedNotes)));\n    }\n  }]);\n\n  return AllNotes;\n}(Component);\n\nexport default AllNotes;","map":{"version":3,"sources":["/Users/zivp/WebstormProjects/my-keep/src/Components/AllNotes.js"],"names":["React","Component","NoteSubmit","Note","AllNotes","props","renderList","list","map","elem","id","receiveNewNote","newNote","note","text","checked","updateNoteCheck","state","nextId","setState","checkedNotes","uncheckedNotes","noteOldStatus","console","log","includes","bind"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;IAEMC,Q;;;;;AACF,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,kFAAMA,KAAN;;AADe,UAWnBC,UAXmB,GAWN,UAACC,IAAD;AAAA,aAAUA,IAAI,CAACC,GAAL,CAAS,UAAAC,IAAI;AAAA,eAAI;AAAI,UAAA,GAAG,EAAEA,IAAI,CAACJ,KAAL,CAAWK,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAyBD,IAAzB,CAAJ;AAAA,OAAb,CAAV;AAAA,KAXM;;AAAA,UAanBE,cAbmB,GAaF,UAACC,OAAD,EAAa;AAC1B,UAAMC,IAAI,GAAG,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAED,OAAO,CAACE,IAApB;AAA0B,QAAA,OAAO,EAAEF,OAAO,CAACG,OAA3C;AAAoD,QAAA,WAAW,EAAE,MAAKC,eAAtE;AAAuF,QAAA,EAAE,EAAE,MAAKC,KAAL,CAAWC,MAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAb;;AACA,YAAKC,QAAL,CAAc;AAACD,QAAAA,MAAM,EAAC,EAAE,MAAKD,KAAL,CAAWC;AAArB,OAAd;;AACA,UAAIN,OAAO,CAACG,OAAZ,EACI,MAAKI,QAAL,CAAc;AAACC,QAAAA,YAAY,+BAAM,MAAKH,KAAL,CAAWG,YAAjB,IAA+BP,IAA/B;AAAb,OAAd,EADJ,KAEK,MAAKM,QAAL,CAAc;AAACE,QAAAA,cAAc,+BAAM,MAAKJ,KAAL,CAAWI,cAAjB,IAAiCR,IAAjC;AAAf,OAAd;AACR,KAnBkB;;AAAA,UAqBnBG,eArBmB,GAqBD,UAACH,IAAD,EAAU;AACxB;AACA,UAAMS,aAAa,GAAGT,IAAI,CAACR,KAAL,CAAWU,OAAjC;AACAF,MAAAA,IAAI,CAACR,KAAL,CAAWU,OAAX,GAAqB,CAACO,aAAtB;AACAT,MAAAA,IAAI;AACJU,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKP,KAAL,CAAWG,YAAX,CAAwBK,QAAxB,CAAiCZ,IAAjC,CAAZ;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKP,KAAL,CAAWI,cAAX,CAA0BI,QAA1B,CAAmCZ,IAAnC,CAAZ;AACH,KA5BkB;;AAGf,UAAKI,KAAL,GAAa;AAACI,MAAAA,cAAc,EAAE,EAAjB;AAAqBD,MAAAA,YAAY,EAAE,EAAnC;AAAuCF,MAAAA,MAAM,EAAE;AAA/C,KAAb;AAEA,UAAKZ,UAAL,GAAkB,MAAKA,UAAL,CAAgBoB,IAAhB,uDAAlB;AACA,UAAKf,cAAL,GAAsB,MAAKA,cAAL,CAAoBe,IAApB,uDAAtB;AACA,UAAKV,eAAL,GAAuB,MAAKA,eAAL,CAAqBU,IAArB,uDAAvB;AAPe;AASlB;;;;6BAqBQ;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKpB,UAAL,CAAgB,KAAKW,KAAL,CAAWI,cAA3B,CADL,CADJ,EAII,oBAAC,UAAD;AAAY,QAAA,cAAc,EAAE,KAAKV,cAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKL,UAAL,CAAgB,KAAKW,KAAL,CAAWG,YAA3B,CADL,CALJ,CADJ;AAWH;;;;EA3CkBnB,S;;AA8CvB,eAAeG,QAAf","sourcesContent":["import React, {Component} from 'react';\nimport NoteSubmit from './NoteSubmit';\nimport Note from './Note';\n\nclass AllNotes extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {uncheckedNotes: [], checkedNotes: [], nextId: 0};\n\n        this.renderList = this.renderList.bind(this);\n        this.receiveNewNote = this.receiveNewNote.bind(this);\n        this.updateNoteCheck = this.updateNoteCheck.bind(this);\n\n    }\n\n    renderList = (list) => list.map(elem => <li key={elem.props.id}>{elem}</li>);\n\n    receiveNewNote = (newNote) => {\n        const note = <Note text={newNote.text} checked={newNote.checked} handleCheck={this.updateNoteCheck} id={this.state.nextId}/>;\n        this.setState({nextId:++this.state.nextId});\n        if (newNote.checked)\n            this.setState({checkedNotes: [...this.state.checkedNotes, note]});\n        else this.setState({uncheckedNotes: [...this.state.uncheckedNotes, note]});\n    };\n\n    updateNoteCheck = (note) => {\n        //const boolToNoteList = {true: this.state.checkedNotes, false:this.state.uncheckedNotes};\n        const noteOldStatus = note.props.checked;\n        note.props.checked = !noteOldStatus;\n        note\n        console.log(this.state.checkedNotes.includes(note));\n        console.log(this.state.uncheckedNotes.includes(note));\n    };\n\n    render() {\n        return (\n            <div>\n                <ul>\n                    {this.renderList(this.state.uncheckedNotes)}\n                </ul>\n                <NoteSubmit updateNoteList={this.receiveNewNote}/>\n                <ul>\n                    {this.renderList(this.state.checkedNotes)}\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default AllNotes;"]},"metadata":{},"sourceType":"module"}